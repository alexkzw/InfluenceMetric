% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/influence_diagnostics_plot.R
\name{influence_diagnostics_plot}
\alias{influence_diagnostics_plot}
\title{Influence Diagnostics and Plot for Linear Models}
\usage{
influence_diagnostics_plot(
  model,
  measure = "cooks_distance",
  return_type = "plot",
  X,
  y
)
}
\arguments{
\item{model}{An object of class lm representing the linear model.}

\item{measure}{A character string specifying which influence measure to calculate. Options are "cooks_distance", "dffits", and "hadis_influence".}

\item{return_type}{A character string specifying the return type. Options are "measure" to return the calculated influence measure, or "plot" to generate a plot.}

\item{X}{A numeric matrix representing the design matrix (including the intercept term). (Required)}

\item{y}{A numeric vector representing the response variable. (Required)}
}
\value{
Either a numeric vector containing the specified influence measure or a plot object, depending on the return_type argument.
}
\description{
This function calculates a specified influence measure (Cook's Distance, DFFITS, or Hadi's Influence Measure)
for a given linear model and dataset, and either returns the calculated measure or generates a plot.
}
\examples{
set.seed(123)
n <- 10  # number of observations
p <- 2   # number of predictors (excluding intercept)

# Generate random data
X <- matrix(rnorm(n * p), n, p)
y <- rnorm(n)

# Add intercept term to the design matrix
X <- cbind(1, X)

# Fit linear model
model <- lm(y ~ X - 1)

# Calculate Cook's Distance and plot the results
influence_diagnostics_plot(model, "cooks_distance", "plot", X, y)

# Return DFFITS values
dffits_values <- influence_diagnostics_plot(model, "dffits", "measure", X, y)
print(dffits_values)
}
